name: CI/CD Pipeline for TypeScript API

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: 18

    steps:
      # Checkout do c√≥digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Check tsconfig  
      - name: Check if tsconfig.json exists
        run: |
          if [ ! -f tsconfig.json ]; then
            echo "üö® ERROR: teste.json is missing. It is required for the build process."
            exit 1
          fi
        shell: bash

      # Configurar a vers√£o do Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Instalar depend√™ncias
      - name: Install dependencies
        run: npm install

      # - name: Run SonarQube analysis
      #   run: |
      #     npx sonar-scanner \
      #       -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
      #       -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
      #       -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
      #       -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: An√°lise de C√≥digo com SonarQube
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          sonar-projectKey: ${{ secrets.SONAR_PROJECT_KEY }}  # Substitua pelo seu projeto key
          sonar-token: ${{ secrets.SONAR_TOKEN }}  # Adicione o token como um segredo no GitHub
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}  # URL do seu SonarQube

      # Executar testes unit√°rios
      - name: Run unit tests
        run: npm test

      # Construir a aplica√ß√£o
      - name: Build the application
        run: npm run build

      # Release do artefato
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_release
    if: success()  
    environment: stage
    steps:
      - name: Deploy to Test Environment
        run: echo "Deploying to the test environment..."

        