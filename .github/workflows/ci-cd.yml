name: CI/CD Pipeline for TypeScript API

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  validate_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if tsconfig.json exists
        run: |
          if [ ! -f tsconfig.json ]; then
            echo "ðŸš¨ ERROR: tsconfig.json is missing. It is required for the build process."
            exit 1
          fi
        shell: bash

  build_and_test:
    runs-on: ubuntu-latest
    needs: validate_files
    env:
      NODE_VERSION: 18

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # - name: Run unit tests
      #   run: npm test

      - name: Build the application
        run: npm run build

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: .

  # sonar_scan:
  #   runs-on: ubuntu-latest
  #   needs: build_and_test
  #   steps:
  #     - name: Download Release Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-artifact
  #         path: .

  #     - name: Run SonarQube analysis
  #       run: |
  #         npx sonar-scanner \
  #           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
  #           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
  #           -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
  #           -Dsonar.token=${{ secrets.SONAR_TOKEN }}
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: success()
    environment: stage
    steps:
      - name: Download Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact
          path: .

      - name: Deploy to Test Environment
        run: echo "Deploying to the test environment..."

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts || true

    - name: Deploy to EC2
      run: |
        scp -r -o StrictHostKeyChecking=no ./dist ubuntu@ec2-44-202-10-221.compute-1.amazonaws.com:/home/ubuntu/app
        ssh -o StrictHostKeyChecking=no ubuntu@ec2-44-202-10-221.compute-1.amazonaws.com "
          if pm2 list | grep -q 'my-app'; then
            pm2 restart my-app;
          else
            pm2 start /home/ubuntu/app/dist/index.js --name my-app;
          fi
        "
